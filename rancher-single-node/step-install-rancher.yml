---
- name: install kubectl rke helm
  hosts: localhost
  connection: local
  remote_user: root
  vars:
    kernel_modules:
      - br_netfilter
      - ip6_udp_tunnel
      - ip_set
      - ip_set_hash_ip
      - ip_set_hash_net
      - iptable_filter
      - iptable_nat
      - iptable_mangle
      - iptable_raw
      - nf_conntrack_netlink
      - nf_conntrack
      - nf_conntrack_ipv4
      - nf_defrag_ipv4
      - nf_nat
      - nf_nat_ipv4
      - nf_nat_masquerade_ipv4
      - nfnetlink
      - udp_tunnel
      - veth
      - vxlan
      - x_tables
      - xt_addrtype
      - xt_conntrack
      - xt_comment
      - xt_mark
      - xt_multiport
      - xt_nat
      - xt_recent
      - xt_set
      - xt_statistic
      - xt_tcpudp
  tasks:
    - name: install kubectl
      shell: |
        curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl
        kubectl version --client
    - name: insatll rke
      shell: |
        curl -s https://api.github.com/repos/rancher/rke/releases/latest | grep download_url | grep amd64 | cut -d '"' -f 4 | wget -qi -
        chmod +x rke_linux-amd64
        sudo mv rke_linux-amd64 /usr/local/bin/rke
        rke --version
    - name: insatll helm
      shell: |
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh
        helm version
    - name: upgrade
      shell: |
        sudo apt update && sudo apt -y full-upgrade
    
    - name: Install required packages
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg
        - lsb-release
        - git
        - wget

    - name: Add RKE admin user
      user:
        name: mediumady
        shell: /bin/bash
     
    - name: Create sudo file
      file:
        path: /etc/sudoers.d/mediumady
        state: touch
    
    - name: Give rke user passwordless sudo
      lineinfile:
        path: /etc/sudoers.d/mediumady
        state: present
        line: 'mediumady ALL=(ALL:ALL) NOPASSWD: ALL'
    
    - name: Create a 2048-bit SSH key for user jsmith in ~mediumady/.ssh/id_rsa
      ansible.builtin.user:
        name: mediumady
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa

    - name: Fix owner of the generated pub key
      file:
        path: /home/mediumady/.ssh/id_rsa.pub
        owner: mediumady
        group: mediumady

    - name: Copy SSH key to authorized_keys
      authorized_key:
        user: mediumady
        key: "{{ lookup('file', '/home/mediumady/.ssh/id_rsa.pub') }}"
        state: present
  
    - name: Load kernel modules for RKE
      modprobe:
        name: "{{ item }}"
        state: present
      with_items: "{{ kernel_modules }}"
      ignore_errors: true

    - name: Disable SWAP since kubernetes can't work with swap enabled (1/2)
      shell: |
        swapoff -a
     
    - name: Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)
      replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+.*)$'
        replace: '# \1'
    - name: Modify sysctl entries
      sysctl:
        name: '{{ item.key }}'
        value: '{{ item.value }}'
        sysctl_set: yes
        state: present
        reload: yes
      with_items:
        - {key: net.bridge.bridge-nf-call-ip6tables, value: 1}
        - {key: net.bridge.bridge-nf-call-iptables,  value: 1}
        - {key: net.ipv4.ip_forward,  value: 1}
    - name: Install Docker
      shell: |
        curl https://releases.rancher.com/install-docker/20.10.sh | sudo sh
        sudo systemctl enable --now docker
        sudo usermod -aG docker mediumady
        id mediumady
        sudo systemctl start docker
    
    - name: Install docker-compose
      remote_user: ubuntu
      get_url: 
        url : https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: 'u+x,g+x'

    - name: Configure SSHd
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^AllowTcpForwarding'
        line: 'AllowTcpForwarding yes'
      

    - name: Create cluster.yml
      blockinfile:
        path: /home/mediumady/cluster.yml
        create: yes
        block: |
          nodes:
            - address: 192.168.0.212
              user: mediumady
              role:
                - controlplane
                - etcd
                - worker

    - name: Set owner and group for cluster.yml
      file:
        path: /home/mediumady/cluster.yml
        owner: mediumady
        group: mediumady
        mode: '0644'
    
    - name: Enable UFW
      command: ufw enable

    - name: Allow specified TCP ports
      loop:
        - 22
        - 80
        - 443
        - 179
        - 5473
        - 6443
        - 8472
        - 2376
        - 8472
        - "2379:2380"
        - 9099
        - 10250
        - 10251
        - 10252
        - 10254
        - "30000:32767"
      command: "ufw allow {{ item }}/tcp"

    - name: Allow specified UDP ports
      loop:
        - 8285
        - 8472
        - 4789
        - "30000:32767"
      command: "ufw allow {{ item }}/udp"

    - name: Reload UFW
      command: ufw reload
